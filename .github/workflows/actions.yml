name: Run tests

on:
  push:
    branches:
      - main
    paths:
      - '**.php'
  pull_request:
    branches:
    - main
    paths:
      - '**.php'

jobs:
  test:
    name: Install and run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          tools: composer:v2, php-cs-fixer
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, xdebug
        env:
          update: true

      - name: PHP version
        run: |
          composer --version
          php -v
          php -i
          php -m
      - name: Validate composer files
        run: composer validate --strict

      - name: Lint all PHP files
        run: composer run lint

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install dependencies
        run: |
          composer install -n --prefer-dist
          composer require erusev/parsedown
          composer require erusev/parsedown-extra
          
      - name: Run static analysis
        run: composer run sa

      - name: Check coding standard
        run: composer run cs
      
      - name: Scanning for security vulnerabilities 
        uses: docker://vimeo/psalm-github-actions
        with:
          security_analysis: true

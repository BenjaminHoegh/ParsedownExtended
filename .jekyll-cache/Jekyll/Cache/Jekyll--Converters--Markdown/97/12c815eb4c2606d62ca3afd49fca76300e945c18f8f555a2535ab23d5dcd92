I"3<h1 id="smartypants">Smartypants</h1>

<h2 id="syntax">Syntax</h2>
<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"smarty"</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="n">boolean</span><span class="o">|</span><span class="k">array</span><span class="p">)</span> <span class="nv">$value</span> <span class="c1">// default true</span>
</code></pre></div></div>

<h2 id="description">Description</h2>
<p>Converts ASCII dashes, quotes and ellipses to
their HTML entity equivalents.</p>

<table>
  <thead>
    <tr>
      <th>ASCII symbol</th>
      <th>Replacements</th>
      <th>HTML Entities</th>
      <th>Substitution Keys</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">''</code></td>
      <td>‘ ’</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;lsquo;</code> <code class="language-plaintext highlighter-rouge">&amp;rsquo;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"left-single-quote"</code>, <code class="language-plaintext highlighter-rouge">"right-single-quote"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">""</code></td>
      <td>“ ”</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;ldquo;</code> <code class="language-plaintext highlighter-rouge">&amp;rdquo;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"left-double-quote"</code>, <code class="language-plaintext highlighter-rouge">"right-double-quote"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">&lt;&lt; &gt;&gt;</code></td>
      <td>« »</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;laquo;</code> <code class="language-plaintext highlighter-rouge">&amp;raquo;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"left-angle-quote"</code>, <code class="language-plaintext highlighter-rouge">"right-angle-quote"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">...</code></td>
      <td>…</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;hellip;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"ellipsis"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">--</code></td>
      <td>–</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;ndash;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"ndash"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">---</code></td>
      <td>—</td>
      <td><code class="language-plaintext highlighter-rouge">&amp;mdash;</code></td>
      <td><code class="language-plaintext highlighter-rouge">"mdash"</code></td>
    </tr>
  </tbody>
</table>

<h2 id="parameters">Parameters</h2>

<p>If <code class="language-plaintext highlighter-rouge">$value</code> is a array, then <code class="language-plaintext highlighter-rouge">smarty</code> will be <code class="language-plaintext highlighter-rouge">true</code> by default.</p>

<ul>
  <li><strong>smart_dashes</strong> (boolean)<br />
Whether to convert dashes.</li>
  <li><strong>smart_quotes</strong> (boolean) <br />
Whether to convert straight quotes.</li>
  <li><strong>smart_angled_quotes</strong> (boolean)<br />
Whether to convert angled quotes.</li>
  <li><strong>smart_ellipses</strong> (boolean)<br />
Whether to convert ellipses.</li>
  <li><strong>smart_shortcodes</strong> (boolean)<br />
Whether to convert shortcodes.</li>
  <li><strong>substitutions</strong> (array)<br />
Overwrite default substitutions.</li>
</ul>

<h2 id="examples">Examples</h2>

<h3 id="substitutions">Substitutions</h3>
<p>Using the configuration option <code class="language-plaintext highlighter-rouge">substitutions</code> you can overwrite the
default substitutions. Just pass a dict mapping (a subset of) the
keys to the substitution strings.</p>

<p>For example, one might use the following configuration to get correct quotes for
the German language:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
    <span class="s2">"smarty"</span><span class="o">:</span> <span class="p">{</span>
        <span class="s2">"substitutions"</span><span class="o">:</span> <span class="p">{</span>
            <span class="s2">"left-single-quote"</span><span class="o">:</span> <span class="s2">"&amp;sbquo;"</span><span class="p">,</span> <span class="c1"># sb is not a typo!</span>
            <span class="s2">"right-single-quote"</span><span class="o">:</span> <span class="s2">"&amp;lsquo;"</span><span class="p">,</span>
            <span class="s2">"left-double-quote"</span><span class="o">:</span> <span class="s2">"&amp;bdquo;"</span><span class="p">,</span>
            <span class="s2">"right-double-quote"</span><span class="o">:</span> <span class="s2">"&amp;ldquo;"</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="enable">Enable</h3>
<p>Enable smartypants</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$Parsedown</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ParsedownExtended</span><span class="p">([</span>
    <span class="s1">'smarty'</span> <span class="o">=&gt;</span> <span class="kc">true</span>
<span class="p">]);</span>
</code></pre></div></div>
:ET